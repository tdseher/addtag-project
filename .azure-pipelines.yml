# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

strategy:
  matrix:
    linux:
      image.name: 'ubuntu-latest'
    mac:
      image.name: 'macos-latest'
    windows:
      image.name: 'windows-latest'

pool:
  vmImage: $(image.name)

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '2.7'
    addToPath: false
  displayName: 'Use Python 2.7'
  name: python2

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    addToPath: false
  displayName: 'Use Python 3.6'
  name: python3

# linux
#   Python 2.7.16
#   /opt/hostedtoolcache/Python/2.7.16/x64/python
# macOS
#   Python 2.7.16
#   /Users/runner/hostedtoolcache/Python/2.7.16/x64/python
# Windows
#   Python 2.7.16
#   C:\hostedtoolcache\windows\Python\2.7.16\x64\python.exe
- script: |
    $(python2.pythonLocation)/python --version
    $(python2.pythonLocation)/python -c "import sys; print(sys.executable)"
  displayName: Show version and location of 'python2' binary

# linux
#   Python 3.6.9
#   /opt/hostedtoolcache/Python/3.6.9/x64/python
# macOS
#   Python 3.6.9
#   /Users/runner/hostedtoolcache/Python/3.6.9/x64/python
# Windows
#   Python 3.6.8
#   C:\hostedtoolcache\windows\Python\3.6.8\x64\python.exe
- script: |
    $(python3.pythonLocation)/python --version
    $(python3.pythonLocation)/python -c "import sys; print(sys.executable)"
  displayName: Show version and location of 'python3' binary

- script: |
    $(python3.pythonLocation)/python -m pip install setuptools
    $(python3.pythonLocation)/python -m pip install --upgrade pip
    $(python3.pythonLocation)/python -m pip install regex
    $(python3.pythonLocation)/python -m pip install primer3-py
  displayName: Install 'AddTag' dependencies

- script: |
    $(python2.pythonLocation)/python -m pip install setuptools
    $(python2.pythonLocation)/python -m pip install --upgrade pip
    $(python2.pythonLocation)/python -m pip install numpy==1.16.4
    $(python2.pythonLocation)/python -m pip install git+https://github.com/MicrosoftResearch/Azimuth.git
  displayName: Install 'Azimuth' dependencies

# Linux
- bash: |
    wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.9.0/ncbi-blast-2.9.0+-x64-linux.tar.gz
    tar -xf ncbi-blast-2.9.0+-x64-linux.tar.gz
    echo "##vso[task.prependpath]$(Build.SourcesDirectory)/ncbi-blast-2.9.0+/bin"
    echo $PATH
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Install 'BLAST+' dependencies on Linux

# macOS
#   IMAGE=ncbi-blast-2.9.0+
#   curl -O ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.9.0/${IMAGE}.dmg
#   sudo hdiutil attach ${IMAGE}.dmg
#   sudo installer -package /Volumes/${IMAGE}/${IMAGE}.pkg -target /
#   sudo hdiutil detach /Volumes/${IMAGE}
- bash: |
    curl -O ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.9.0/ncbi-blast-2.9.0+-x64-macosx.tar.gz
    tar -xf ncbi-blast-2.9.0+-x64-macosx.tar.gz
    echo "##vso[task.prependpath]$(Build.SourcesDirectory)/ncbi-blast-2.9.0+/bin"
    echo $PATH
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: Install 'BLAST+' dependencies on macOS

# Windows
#   $env:PATH += "$(Build.SourcesDirectory)\ncbi-blast-2.9.0+\bin;"
#- powershell: |
#    Invoke-WebRequest -Uri ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.9.0/ncbi-blast-2.9.0+-x64-win64.tar.gz -OutFile ncbi-blast-2.9.0+-x64-win64.tar.gz
#    tar -xf ncbi-blast-2.9.0+-x64-win64.tar.gz
#    echo "##vso[task.prependpath]$(Build.SourcesDirectory)\ncbi-blast-2.9.0+\bin"
#    echo $env:PATH
- bash: |
    wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.9.0/ncbi-blast-2.9.0+-x64-win64.tar.gz
    tar -xf ncbi-blast-2.9.0+-x64-win64.tar.gz
    echo "##vso[task.prependpath]$(Build.SourcesDirectory)\ncbi-blast-2.9.0+\bin"
    echo $PATH
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: Install 'BLAST+' dependencies on Windows

- script: |
    blastn -version
  displayName: Show version of 'blastn' binary

- script: |
    $(python3.pythonLocation)/python -m pip install pytest pytest-azurepipelines pytest-cov
    $(python3.pythonLocation)/python -m pytest --cov source --cov-report xml --cov-report html tests/
  displayName: PyTest

- script: |
    pwd
    ls
    ls $(Build.SourcesDirectory)
    ls $(System.DefaultWorkingDirectory)
  displayName: List folder contents

- script: |
    $(python3.pythonLocation)/python addtag --help
  displayName: Usage

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
  displayName: 'Publish code coverage results'